---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boogie-rest
  namespace: tdp
  labels:
    app: boogie-rest
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"boogie-rest:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"boogie-rest\")].image"}]'
spec:
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: boogie-rest
  template:
    metadata:
      labels:
        app: boogie-rest
    spec:
      containers:
        - name: boogie-rest
          image: image-registry.openshift-image-registry.svc:5000/tdp/boogie-rest
          imagePullPolicy: Always
          ports:
            - containerPort: 8087
          envFrom:
            - configMapRef:
                name: boogie-rest-config
          resources:
            requests:
              cpu: 200m
              memory: 5Gi
            limits:
              cpu: 400m
              memory: 10Gi
          volumeMounts:
            - name: boogie-arinc-db
              mountPath: /data/db/arinc
      # Claim to a volume which we assume will have a loaded cycle of procedure data in it
      volumes:
        - name: boogie-arinc-db
          persistentVolumeClaim:
            claimName: boogie-arinc-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: boogie-arinc-db
spec:
  # We need to be able to update the data stored in this volume periodically from a different
  accessModes:
    - ReadWriteMany
  storageClassName: basic
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: boogie-rest-config
  namespace: tdp
data:
  # Assume the data exists in the persistent volume attached to the container - a separate process will populate this
  FILE_LOCATOR_PATH: '/data/db/arinc/arinc-data.dat'
---
apiVersion: v1
kind: Service
metadata:
  name: boogie-rest
  namespace: tdp
spec:
  selector:
    app: boogie-rest
  ports:
    - name: rest-port
      protocol: TCP
      port: 8087
      targetPort: 8087
  clusterIP: None
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: boogie-rest
  namespace: tdp
spec:
  # The routes spec determines where on the EPIC cluster (and under what name) the app will be deployed - this hostname should be resolvable in the browser
  host: boogie-rest.apps.epic-osc.mitre.org
  to:
    kind: Service
    name: boogie-rest
    weight: 100
  port:
    targetPort: 8087
  tls:
    termination: edge
  wildcardPolicy: None


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
spec:
  revisionHistoryLimit: 0
  {{- if .Values.resources.replicas }}
  replicas: {{ .Values.resources.replicas }}
  {{- end}}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
      {{- if .Values.deployment.annotations }}
      annotations:
{{ toYaml .Values.deployment.annotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
      - name: {{ . }}
      {{- end }}
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Values.name }}
          # Use the image built from the release version of the boogie software in the prod deployment
          image: {{ .Values.image }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: arinc.config.properties
              value: /config/arinc.properties
          resources:
            requests:
              cpu: {{ .Values.resources.cpu }}
              memory: {{ .Values.resources.memory }}
            limits:
              cpu: {{ .Values.resources.cpuLimit }}
              memory: {{ .Values.resources.memoryLimit }}
          volumeMounts:
            - name: config
              mountPath: "/config"
              readOnly: true
            - name: {{ .Values.name }}-db
              mountPath: {{ .Values.arinc.watchDirectory }}
              readOnly: false
      # Claim to a volume which we assume will have a loaded cycle of procedure data in it
      volumes:
        - name: config
          configMap:
            name: {{ .Values.name }}-config
            items:
              - key: arinc.properties
                path: arinc.properties
        - name: {{ .Values.name }}-db
          persistentVolumeClaim:
            claimName: {{ .Values.name }}-db
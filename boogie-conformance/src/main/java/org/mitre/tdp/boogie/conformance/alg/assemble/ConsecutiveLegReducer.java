package org.mitre.tdp.boogie.conformance.alg.assemble;

import java.util.List;

/**
 * Interface for application specific logic to de-duplicate the legs generated by {@link ConsecutiveLegAssembler}s.
 *
 * For runtime considerations we want to provided a way to logically de-duplicate legs which may have been looked-up
 * via multiple different methods and therefore appear multiple times in the input set of legs to the assigner.
 */
@FunctionalInterface
public interface ConsecutiveLegReducer {

  /**
   * Takes as an input a list of assembled consecutive legs and reduces them to the unique triples.
   */
  List<? extends ConsecutiveLegs> reduce(List<? extends ConsecutiveLegs> legs);
}

package org.mitre.tdp.boogie.dafif.v81.field;

/**
 * THE TRANSITION IDENTIFIER DESCRIBES THE TRANSITION FROM THE ENROUTE ENVIRONMENT TO THE  TERMINAL AREA AND VICE VERSA, THE TERMINAL AREA TO THE APPROACH, AND THE RUNWAY OR
 *  HELIPAD TO THE TERMINAL AREA.  (DAFIF)
 *
 *  THE TRANSITION IDENTIFIER IS DETERMINED BY THE TYPE OF PROCEDURE.  SEE TABLE AND NOTES  BELOW.
 *
 *  PROC
 *  TYPE - TRANS IDENT
 *
 *  SID
 *  1 OR 4 - RUNWAY OR HELIPAD IDENT
 *  2 OR 5 - NULL, RUNWAY, PAD, OR ALL
 *  3 OR 6 - ENROUTE TRANSITION IDENTIFIER
 *
 *  STAR
 *  1, 4 OR 7 - ENROUTE TRANSITION IDENTIFIER
 *  2, 5 OR 8 - NULL, RUNWAY, PAD, OR ALL
 *  3, 6 OR 9 - RUNWAY OR HELIPAD IDENTIFIER
 *
 *  IAP
 *  A - IDENTIFIER OF FIRST FIX IN TRANSITION
 *
 *  ALL OTHER ENTRIES - NULL
 *
 * EXAMPLE(S):
 * AA014
 * RW19R
 * RW02B
 * ALL
 * NULL
 *
 * FIELD TYPE: A/N
 *
 * ALLOWED VALUES:
 * COMBINATIONS OF LETTERS A-Z, NUMBERS 0-9
 * OR
 * RW01 - RW36
 * OR
 * RW01 - RW36 (FOLLOWED BY 'B', 'C', 'L', OR 'R')
 * OR
 * ALL
 * OR
 * NULL
 *
 * SOURCE: TRANSLATED/FORMATTED FROM HOST NATION PUBLICATION
 *
 * INTENDED USE:
 * SID:  ENROUTE TRANSITION IDENTIFIER WILL BE SPECIFIED BY SOURCE OR WILL BE IDENTIFIER OF THE LAST FIX IN TRANSITION.
 *
 * STAR:  ENROUTE TRANSITION IDENTIFIER WILL BE SPECIFIED BY SOURCE OR WILL BE IDENTIFIER OF INITIAL FIX IN THE TRANSITION.
 *
 * WHEN FEEDER FACILITY HAS MORE THAN ONE FEEDER ROUTE THE TRANSITION IDENTIFIER MAY INCLUDE THE FEEDER FACILITY IDENT WITH NUMERATION (TRUNCATION MAY BE NECESSARY TO FIT FIELD LENGTH).
 *
 * THE USE OF 'ALL' INDICATES THE PROCEDURE IS VALID FOR TWO OR MORE RUNWAYS/HELIPADS AT AN  AIRPORT/HELIPORT.
 * THE USE OF THE CHARACTER 'B' FOLLOWING A RUNWAY DESIGNATION (EX. RW10B) INDICATES THE  TRANSITION IS VALID FOR TWO OR MORE PARALLEL RUNWAYS (EX. RW10R &amp; RW10L).
 */
public final class TransitionIdentifier extends TrimmableString {
  @Override
  public int maxFieldLength() {
    return 5;
  }

  @Override
  public int fieldCode() {
    return 320;
  }

  @Override
  public String regex() {
    return "(([A-Z0-9]{1,5}|RW(0[1-9]|[1-2][0-9]|3[0-6])[BCLR]?|ALL)?)";
  }
}
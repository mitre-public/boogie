---
version: 2
plan:
  project-key: TTFS
  key: SHIM
  name: TDP Boogie

branches:
  create: for-new-branch
  delete:
    after-deleted-days: 3
    after-inactive-days: 14
  link-to-jira: true

notifications:
  - recipients:
      - webhook:
          name: "Slack Build Webhook"
          url: "https://hooks.slack.com/services/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"
    events:
      - plan-status-changed

variables: !include 'variables.yml'

labels:
  - ttfs
  - boogie

stages:
  # Configure standard test and integration tests as part of the same stage but as different jobs so they can be run in parallel
  - Test: [ Gradle Standard Test, Gradle Integration Test ]
  - Push Latest: [ Publish Snapshots, Push Latest Image Codev Artifactory ]
  - Deploy Latest: [ Deploy Latest Internal Openshift ]
  - Push Release:
      manual: true
      jobs: [ Report Updated Code Quality, Publish Release, Push Release Image Codev Artifactory ]

Gradle Standard Test:
  tasks:
    - checkout:
        force-clean-build: 'false'
    - script:
        file: ./scripts/ci/ci-build.sh
        # Export a location that doesn't exist so the locator doesn't attempt to parse a cycle of data that may be visible at the
        # default file location from the host machine
        environment: FILE_LOCATOR_PATH="/idont/exist"
  final-tasks: &tests-final
    - test-parser:
        type: junit
        ignore-time: true
        test-results: '**/test-results/**/*.xml'
  artifacts: &tests-artifacts
    - name: reports
      pattern: '**/build/reports/tests/**/*'
      shared: false
      required: false
  other: &other-plugins
    clean-working-dir: true
  requirements:
    - system.name: rhizome[456]

Gradle Integration Test:
  tasks:
    - checkout:
        force-clean-build: 'false'
    - script:
        file: ./scripts/ci/ci-testIntegration.sh
        environment: FILE_LOCATOR_PATH="/idont/exist"
  final-tasks: *tests-final
  artifacts: *tests-artifacts
  other: *other-plugins
  requirements:
    - system.name: rhizome[456]

Publish Snapshots:
  tasks:
    - script:
        file: ./scripts/ci/ci-publish-snapshot.sh
        argument: -PmavenUser=${bamboo.dali_user} -PmavenPassword=${bamboo.dali_password}
        conditions: &only-run-main
          - variable:
              matches:
                bamboo.planRepository.branchDisplayName: 'main'
  other: *other-plugins
  requirements:
    - system.name: rhizome[45]

Push Latest Image Codev Artifactory:
  tasks:
    - script:
        file: ./scripts/ci/ci-build-and-push-image.sh
        argument: ${bamboo.codev_artifactory} ${bamboo.codev_user} ${bamboo.codev_api_key_secret} idaass-docker/tdp/boogie-rest latest
        conditions: *only-run-main
  other: *other-plugins
  requirements:
    - system.name: rhizome[\d]
    - Docker

Deploy Latest Internal Openshift:
  tasks:
    - script:
        # This script will download and configure kubectl CLI for deployment to kubernetes clusters with the provided credentialing arguments
        file: ./scripts/ci/ci-deploy-boogie-rest.sh
        argument: ${bamboo.internal_kubernetes_cluster_server} ${bamboo.internal_kubernetes_tfm_analytics_deployment_secret} tfm-analytics
        conditions: *only-run-main
  docker: centos:7

Report Updated Code Quality:
  tasks:
    - script:
        file: ./scripts/ci/ci-reporting.sh
        conditions: *only-run-main
  other: *other-plugins
  requirements:
    - system.name: rhizome[45]

Publish Release:
  tasks:
    - script:
        file: ./scripts/ci/ci-publish-release.sh
        argument: -PmavenUser=${bamboo.dali_user} -PmavenPassword=${bamboo.dali_password}
        conditions: *only-run-main
  other: *other-plugins
  requirements:
    - system.name: rhizome[45]

Push Release Image Codev Artifactory:
  tasks:
    - script:
        file: ./scripts/ci/ci-build-and-push-image.sh
        argument: ${bamboo.codev_artifactory} ${bamboo.codev_user} ${bamboo.codev_api_key_secret} idaass-docker/tdp/boogie-rest
        conditions: *only-run-main
  other: *other-plugins
  requirements:
    - system.name: rhizome[\d]
    - Docker

branch-overrides:
  - ^((?!main).)*$:
      notifications:
        - recipients:
            - responsible
            - watchers
            - committers
          events:
            - plan-failed
---
!include 'permissions.yml'